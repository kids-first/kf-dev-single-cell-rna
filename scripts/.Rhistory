results_dir= "/Users/chronia/CHOP/GitHub/kf-dev-single-cell-rna/scripts/example"
data_path= "/Users/chronia/CHOP/GitHub/single-cell-analysis/data/10x-wf/7316-371/7316-371/outs/filtered_feature_bc_matrix"
load_all("/Users/chronia/CHOP/GitHub/scooter") # from https://github.com/igordot/scooter
sample_name="7316-371"
suppressPackageStartupMessages({
library(future)
library(cowplot)
library(devtools)
library(forcats)
#library(GGally)
library(stringr)
#library(ggpmisc)
library(ggrepel)
library(miQC)
library(scater)
theme_set(theme_bw())
# evaluate Seurat R expressions asynchronously when possible (such as ScaleData) using future package
plan("multisession", workers = 4)
# increase the limit of the data to be shuttled between the processes from default 500MB to 50GB
options(future.globals.maxSize = 30 * 1024 ^ 3)
})
load_all("/Users/chronia/CHOP/GitHub/scooter") # from https://github.com/igordot/scooter
attach(params)
results_dir = file.path(results_dir, paste0("Seurat_QC-", sample_name, "/"))
if (dir.exists(results_dir)) {
stop(glue("output analysis dir {results_dir} already exists"))
} else {
dir.create(results_dir, recursive=TRUE)
}
# File path to data with the filtered_feature_bc_matrix
cat(paste(c("", sprintf("`%s`", list.files(paste(data_path, "/outs"), full.names = TRUE))),
collapse = "\n- "))
cat("\n\n")
# File path to scratch directory
scratch_dir <- file.path(results_dir, "dr")
if (!dir.exists(scratch_dir)) {
dir.create(scratch_dir)
}
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE,
fig.path = results_dir,
fig.height = 10,
fig.width = 15,
dev = c("png"))
# Load counts to a list of matrices
counts_mat <- load_sample_counts_matrix(path = data_path,
sample_name = sample_name)
# Create seurat object using gene expression data
seurat_obj <- create_seurat_obj(counts_matrix = counts_mat[["Gene Expression"]],
assay = "RNA",
log_file = NULL)
seurat_obj
# Install the remotes package
install.packages('remotes')
# Replace 'X.X.X' with your desired version
remotes::install_version(package = 'Seurat', version = package_version('4.4.0'))
